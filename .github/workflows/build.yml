name: build package & server

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test package with tox
      run: tox -vv

  build_server:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Unit tests on api with tox
      run: |
        cd carbonserver/
        tox -e unit -vv
  
  test_api_server:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_DB: codecarbon_db
          POSTGRES_PASSWORD: supersecret
          POSTGRES_USER: codecarbon-user
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd carbonserver
          pip install -r requirements-test.txt
          pip install tox tox-gh-actions

      - name: Setup PostgreSQL
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data.
        run: |
          cd carbonserver
          netstat -o -n -a | grep 5432 || true
          ping -c 1 postgres || true
          sleep 5
          # python3 -m alembic -c carbonserver/database/alembic.ini upgrade head
        env:
          # The hostname used to communicate with the PostgreSQL service container
          DATABASE_URL: postgresql://codecarbon-user:supersecret@postgres:5432/codecarbon_db

      - name: Run API tests
        run: |
          uvicorn --reload main:app --host 0.0.0.0 &
          sleep 5
          netstat -o -n -a | grep 8000
          tox -e with_api_server
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          DATABASE_URL: postgresql://codecarbon-user:supersecret@postgres:5432/codecarbon_db
          CODECARBON_API_URL: http://localhost:8000



